scalar Date

type Query {
  categorias(tipo: Tipo): [ Categoria! ]!
  lancamentos(
    """
      Mês e Ano: MM-YYYY
    """
    mes: String
    tipo: Tipo
    categoriasIds: [ ID! ]
  ): [ Lancamento! ]!
  usuario: Usuario
  """
    Ano, mês e dia: YYYY-MM-DD
  """
  balancoTotal(data: Date!): Float!
}

type Mutation {
  createCategoria(descricao: String!, tipo: Tipo!): Categoria!
  createLancamento(
    categoriaId: ID!
    valor: Float!
    tipo: Tipo
    data: Date!
    descricaoLancamento: String!
  ): Lancamento! 
  login(email: String!, senha: String!): AuthPayload
  registrar(email: String!, senha: String!, nome: String!): AuthPayload
}

type AuthPayload {
  token: String!
  usuario: Usuario!
}

type Usuario {
  id: ID!
  nome: String!
  email: String!
}

enum Tipo {
  RECEITA
  DESPESA
}

type Categoria {
  id: ID!
  usuario: Usuario
  descricao: String!
  tipo: Tipo!
}

type Lancamento {
  id: ID!
  usuario: Usuario!
  tipo: Tipo!
  categoria: Categoria!
  valor: Float!
  data: Date!
  descricaoLancamento: String!
}

